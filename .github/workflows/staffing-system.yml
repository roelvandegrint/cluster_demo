name: Container app system

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]

  # Allow mannually trigger 
  workflow_dispatch:      

env:
  REGISTRY: roelvandegrint.azurecr.io
  RESOURCE_GROUP: rg-cluster-demo

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services: [ 
          { 'imageName': 'frontend', 'directory': '.', 'dockerFile': './Frontend/Dockerfile' },
          { 'imageName': 'staffingsvc', 'directory': '.', 'dockerFile': './StaffingService/Dockerfile' }
        ]
    outputs:
      containerImage-frontend: ${{ steps.image-tag.outputs.image-frontend }}
      containerImage-staffingsvc: ${{ steps.image-tag.outputs.image-staffingsvc }}      
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2        

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      #Build and push Docker image with Buildx (don't push on PR)
      #https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.services.directory }}
          tags: ${{ env.REGISTRY }}/${{ matrix.services.imageName }}:${{ github.sha }}
          push: true
          file: ${{ matrix.services.dockerFile }}


      - name: Output image tag
        id: image-tag
        run: echo "::set-output name=image-${{ matrix.services.imageName }}::${{ matrix.services.imageName }}:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy bicep
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -g ${{ env.RESOURCE_GROUP }} -l northeurope
            az deployment group create -g ${{ env.RESOURCE_GROUP }} -f ./deploy/main.bicep \
             -p \
                environmentName=contenv-ip-ap \
                frontendImage=${{ env.REGISTRY}}/${{ needs.build.outputs.containerImage-frontend }} \
                frontendPort=80 \
                frontendAppId=frontend \
                staffingsvcImage=${{ env.REGISTRY}}/${{ needs.build.outputs.containerImage-staffingsvc }} \
                staffingsvcPort=80 \
                staffingsvcAppId=staffingsvc \
                registry=${{ env.REGISTRY }} \
                registryUsername=${{ secrets.REGISTRY_USERNAME }} \
                registryPassword=${{ secrets.REGISTRY_PASSWORD }} \
