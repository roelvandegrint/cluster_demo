@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Frontend.Data
@using Staffing.Shared
@inject StaffingService staffingService
@inject ILogger<Index> logger
@inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

<h1>Hello!</h1>

@if (employees is null)
{
    <p>Loading...</p>
}
else
{
    <p>Our cluster currently consists of @employees.Count() people.</p>

    @if (!employees.Any())
    {
        <h2>There's no one here yet</h2>
    }
    else
    {
        <h2>The most recent new-joiners are:</h2>

        <div class="row">
            @foreach (var employee in employees.Take(3))
            {
                <div class="col-md-4">
                    <EmployeeCard Employee="@employee"></EmployeeCard>
                </div>
            }
        </div>
    }
}

@if (newEmployee is not null)
{
    <p>Someone joined the company!</p>
    <EmployeeCard Employee="@newEmployee"></EmployeeCard>
}

<p>Notifications area goes here</p>
@code {
    private HubConnection? hubConnection;

    private bool employeesLoading;
    private List<Employee>? employees;
    private Employee? newEmployee;

    protected override async Task OnInitializedAsync()
    {
        await SetupSignalRAsync();

        employeesLoading = true;
        var employees = await staffingService.GetForecastAsync();
        this.employees = employees.OrderByDescending(e => e.JoinedOn).ToList();
        employeesLoading = false;

        @* var employees = new Employee[] {
            new("Roel", "van de Grint", new DateTime(2017,9,1), "IMG_0609.JPG"),
            new("Donald", "Hessing", new DateTime(1900, 5, 4), null),
            new("Gerben", "de Vries", new DateTime(2021, 6, 6), null),
            new("Carl", "in 't Veld", new DateTime(2014, 7, 3), null)
            };
            this.employees = employees.OrderByDescending(e => e.JoinedOn).ToArray(); *@
    }

    private async Task SetupSignalRAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/notificationshub"))
    @* .WithUrl("https://cont-frontend.jollybush-3d99f517.northeurope.azurecontainerapps.io/notificationshub") *@
    .Build();

        hubConnection.On<Employee>("EmployeeJoined", employee =>
        {
            newEmployee = employee;
            employees!.Add(employee);
            employees = employees.OrderByDescending(e => e.JoinedOn).ToList();
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }
}
